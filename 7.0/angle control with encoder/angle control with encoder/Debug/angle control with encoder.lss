
angle control with encoder.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800200  000008ba  0000094e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008ba  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000118  00800206  00800206  00000954  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000954  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000984  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c8  00000000  00000000  000009c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000203a  00000000  00000000  00000b8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001046  00000000  00000000  00002bc6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d0a  00000000  00000000  00003c0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000051c  00000000  00000000  00004918  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d93  00000000  00000000  00004e34  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001121  00000000  00000000  00005bc7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f8  00000000  00000000  00006ce8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	72 c0       	rjmp	.+228    	; 0xe6 <__ctors_end>
   2:	00 00       	nop
   4:	9e c0       	rjmp	.+316    	; 0x142 <__bad_interrupt>
   6:	00 00       	nop
   8:	9c c0       	rjmp	.+312    	; 0x142 <__bad_interrupt>
   a:	00 00       	nop
   c:	9a c0       	rjmp	.+308    	; 0x142 <__bad_interrupt>
   e:	00 00       	nop
  10:	98 c0       	rjmp	.+304    	; 0x142 <__bad_interrupt>
  12:	00 00       	nop
  14:	96 c0       	rjmp	.+300    	; 0x142 <__bad_interrupt>
  16:	00 00       	nop
  18:	94 c0       	rjmp	.+296    	; 0x142 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	92 c0       	rjmp	.+292    	; 0x142 <__bad_interrupt>
  1e:	00 00       	nop
  20:	90 c0       	rjmp	.+288    	; 0x142 <__bad_interrupt>
  22:	00 00       	nop
  24:	8e c0       	rjmp	.+284    	; 0x142 <__bad_interrupt>
  26:	00 00       	nop
  28:	8c c0       	rjmp	.+280    	; 0x142 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	8a c0       	rjmp	.+276    	; 0x142 <__bad_interrupt>
  2e:	00 00       	nop
  30:	88 c0       	rjmp	.+272    	; 0x142 <__bad_interrupt>
  32:	00 00       	nop
  34:	86 c0       	rjmp	.+268    	; 0x142 <__bad_interrupt>
  36:	00 00       	nop
  38:	84 c0       	rjmp	.+264    	; 0x142 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	82 c0       	rjmp	.+260    	; 0x142 <__bad_interrupt>
  3e:	00 00       	nop
  40:	80 c0       	rjmp	.+256    	; 0x142 <__bad_interrupt>
  42:	00 00       	nop
  44:	7e c0       	rjmp	.+252    	; 0x142 <__bad_interrupt>
  46:	00 00       	nop
  48:	7c c0       	rjmp	.+248    	; 0x142 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	7a c0       	rjmp	.+244    	; 0x142 <__bad_interrupt>
  4e:	00 00       	nop
  50:	78 c0       	rjmp	.+240    	; 0x142 <__bad_interrupt>
  52:	00 00       	nop
  54:	76 c0       	rjmp	.+236    	; 0x142 <__bad_interrupt>
  56:	00 00       	nop
  58:	74 c0       	rjmp	.+232    	; 0x142 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	72 c0       	rjmp	.+228    	; 0x142 <__bad_interrupt>
  5e:	00 00       	nop
  60:	70 c0       	rjmp	.+224    	; 0x142 <__bad_interrupt>
  62:	00 00       	nop
  64:	e8 c0       	rjmp	.+464    	; 0x236 <__vector_25>
  66:	00 00       	nop
  68:	15 c1       	rjmp	.+554    	; 0x294 <__vector_26>
  6a:	00 00       	nop
  6c:	6a c0       	rjmp	.+212    	; 0x142 <__bad_interrupt>
  6e:	00 00       	nop
  70:	68 c0       	rjmp	.+208    	; 0x142 <__bad_interrupt>
  72:	00 00       	nop
  74:	66 c0       	rjmp	.+204    	; 0x142 <__bad_interrupt>
  76:	00 00       	nop
  78:	64 c0       	rjmp	.+200    	; 0x142 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	62 c0       	rjmp	.+196    	; 0x142 <__bad_interrupt>
  7e:	00 00       	nop
  80:	60 c0       	rjmp	.+192    	; 0x142 <__bad_interrupt>
  82:	00 00       	nop
  84:	5e c0       	rjmp	.+188    	; 0x142 <__bad_interrupt>
  86:	00 00       	nop
  88:	5c c0       	rjmp	.+184    	; 0x142 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	5a c0       	rjmp	.+180    	; 0x142 <__bad_interrupt>
  8e:	00 00       	nop
  90:	9e c1       	rjmp	.+828    	; 0x3ce <__vector_36>
  92:	00 00       	nop
  94:	cb c1       	rjmp	.+918    	; 0x42c <__vector_37>
  96:	00 00       	nop
  98:	54 c0       	rjmp	.+168    	; 0x142 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	52 c0       	rjmp	.+164    	; 0x142 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	50 c0       	rjmp	.+160    	; 0x142 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	4e c0       	rjmp	.+156    	; 0x142 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	4c c0       	rjmp	.+152    	; 0x142 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	4a c0       	rjmp	.+148    	; 0x142 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	48 c0       	rjmp	.+144    	; 0x142 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	46 c0       	rjmp	.+140    	; 0x142 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	44 c0       	rjmp	.+136    	; 0x142 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	42 c0       	rjmp	.+132    	; 0x142 <__bad_interrupt>
  be:	00 00       	nop
  c0:	40 c0       	rjmp	.+128    	; 0x142 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	3e c0       	rjmp	.+124    	; 0x142 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	3c c0       	rjmp	.+120    	; 0x142 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	dd c1       	rjmp	.+954    	; 0x488 <__vector_51>
  ce:	00 00       	nop
  d0:	0a c2       	rjmp	.+1044   	; 0x4e6 <__vector_52>
  d2:	00 00       	nop
  d4:	36 c0       	rjmp	.+108    	; 0x142 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	34 c2       	rjmp	.+1128   	; 0x542 <__vector_54>
  da:	00 00       	nop
  dc:	61 c2       	rjmp	.+1218   	; 0x5a0 <__vector_55>
  de:	00 00       	nop
  e0:	30 c0       	rjmp	.+96     	; 0x142 <__bad_interrupt>
	...

000000e4 <__ctors_start>:
  e4:	10 01       	movw	r2, r0

000000e6 <__ctors_end>:
  e6:	11 24       	eor	r1, r1
  e8:	1f be       	out	0x3f, r1	; 63
  ea:	cf ef       	ldi	r28, 0xFF	; 255
  ec:	d1 e2       	ldi	r29, 0x21	; 33
  ee:	de bf       	out	0x3e, r29	; 62
  f0:	cd bf       	out	0x3d, r28	; 61
  f2:	00 e0       	ldi	r16, 0x00	; 0
  f4:	0c bf       	out	0x3c, r16	; 60

000000f6 <__do_copy_data>:
  f6:	12 e0       	ldi	r17, 0x02	; 2
  f8:	a0 e0       	ldi	r26, 0x00	; 0
  fa:	b2 e0       	ldi	r27, 0x02	; 2
  fc:	ea eb       	ldi	r30, 0xBA	; 186
  fe:	f8 e0       	ldi	r31, 0x08	; 8
 100:	00 e0       	ldi	r16, 0x00	; 0
 102:	0b bf       	out	0x3b, r16	; 59
 104:	02 c0       	rjmp	.+4      	; 0x10a <__do_copy_data+0x14>
 106:	07 90       	elpm	r0, Z+
 108:	0d 92       	st	X+, r0
 10a:	a6 30       	cpi	r26, 0x06	; 6
 10c:	b1 07       	cpc	r27, r17
 10e:	d9 f7       	brne	.-10     	; 0x106 <__do_copy_data+0x10>

00000110 <__do_clear_bss>:
 110:	23 e0       	ldi	r18, 0x03	; 3
 112:	a6 e0       	ldi	r26, 0x06	; 6
 114:	b2 e0       	ldi	r27, 0x02	; 2
 116:	01 c0       	rjmp	.+2      	; 0x11a <.do_clear_bss_start>

00000118 <.do_clear_bss_loop>:
 118:	1d 92       	st	X+, r1

0000011a <.do_clear_bss_start>:
 11a:	ae 31       	cpi	r26, 0x1E	; 30
 11c:	b2 07       	cpc	r27, r18
 11e:	e1 f7       	brne	.-8      	; 0x118 <.do_clear_bss_loop>

00000120 <__do_global_ctors>:
 120:	10 e0       	ldi	r17, 0x00	; 0
 122:	c3 e7       	ldi	r28, 0x73	; 115
 124:	d0 e0       	ldi	r29, 0x00	; 0
 126:	00 e0       	ldi	r16, 0x00	; 0
 128:	05 c0       	rjmp	.+10     	; 0x134 <__do_global_ctors+0x14>
 12a:	21 97       	sbiw	r28, 0x01	; 1
 12c:	01 09       	sbc	r16, r1
 12e:	80 2f       	mov	r24, r16
 130:	fe 01       	movw	r30, r28
 132:	86 d3       	rcall	.+1804   	; 0x840 <__tablejump2__>
 134:	c2 37       	cpi	r28, 0x72	; 114
 136:	d1 07       	cpc	r29, r17
 138:	80 e0       	ldi	r24, 0x00	; 0
 13a:	08 07       	cpc	r16, r24
 13c:	b1 f7       	brne	.-20     	; 0x12a <__do_global_ctors+0xa>
 13e:	49 d0       	rcall	.+146    	; 0x1d2 <main>
 140:	ba c3       	rjmp	.+1908   	; 0x8b6 <_exit>

00000142 <__bad_interrupt>:
 142:	5e cf       	rjmp	.-324    	; 0x0 <__vectors>

00000144 <_ZN7encoder22Init_encoder_interruptEv>:



void encoder::Init_encoder_interrupt()
{
	sei();
 144:	78 94       	sei
	EICRA = 0b11111111;
 146:	8f ef       	ldi	r24, 0xFF	; 255
 148:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x700069>
	EIMSK |= (1<<INT0)|(1<<INT1) | (1<<INT2) | (1<<INT3);
 14c:	8d b3       	in	r24, 0x1d	; 29
 14e:	8f 60       	ori	r24, 0x0F	; 15
 150:	8d bb       	out	0x1d, r24	; 29
 152:	08 95       	ret

00000154 <_ZN7encoder10Init_timerEv>:
}

void encoder::Init_timer()
{
	sei();
 154:	78 94       	sei
	TCCR0B |= (1<<CS02) | (1<<CS00);
 156:	85 b5       	in	r24, 0x25	; 37
 158:	85 60       	ori	r24, 0x05	; 5
 15a:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = (1<<TOIE0);
 15c:	81 e0       	ldi	r24, 0x01	; 1
 15e:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
 162:	08 95       	ret

00000164 <_ZN7encoder9get_angleEv>:
} 

int encoder::get_angle()
{
	return (int(count_encoder * 1.8));
 164:	fc 01       	movw	r30, r24
 166:	60 81       	ld	r22, Z
 168:	71 81       	ldd	r23, Z+1	; 0x01
 16a:	07 2e       	mov	r0, r23
 16c:	00 0c       	add	r0, r0
 16e:	88 0b       	sbc	r24, r24
 170:	99 0b       	sbc	r25, r25
 172:	77 d2       	rcall	.+1262   	; 0x662 <__floatsisf>
 174:	26 e6       	ldi	r18, 0x66	; 102
 176:	36 e6       	ldi	r19, 0x66	; 102
 178:	46 ee       	ldi	r20, 0xE6	; 230
 17a:	5f e3       	ldi	r21, 0x3F	; 63
 17c:	d6 d2       	rcall	.+1452   	; 0x72a <__mulsf3>
 17e:	3e d2       	rcall	.+1148   	; 0x5fc <__fixsfsi>
}
 180:	cb 01       	movw	r24, r22
 182:	08 95       	ret

00000184 <_Z7initpwmv>:

}
void dutycycle(int x)
{
	PWM_OCR1 = int((ICR_TOP/100)*x);
	setforward();
 184:	e7 e0       	ldi	r30, 0x07	; 7
 186:	f1 e0       	ldi	r31, 0x01	; 1
 188:	80 81       	ld	r24, Z
 18a:	80 64       	ori	r24, 0x40	; 64
 18c:	80 83       	st	Z, r24
 18e:	80 81       	ld	r24, Z
 190:	80 68       	ori	r24, 0x80	; 128
 192:	80 83       	st	Z, r24
 194:	ea e0       	ldi	r30, 0x0A	; 10
 196:	f1 e0       	ldi	r31, 0x01	; 1
 198:	80 81       	ld	r24, Z
 19a:	80 62       	ori	r24, 0x20	; 32
 19c:	80 83       	st	Z, r24
 19e:	e0 e2       	ldi	r30, 0x20	; 32
 1a0:	f1 e0       	ldi	r31, 0x01	; 1
 1a2:	80 81       	ld	r24, Z
 1a4:	8a 60       	ori	r24, 0x0A	; 10
 1a6:	80 83       	st	Z, r24
 1a8:	e1 e2       	ldi	r30, 0x21	; 33
 1aa:	f1 e0       	ldi	r31, 0x01	; 1
 1ac:	80 81       	ld	r24, Z
 1ae:	8a 61       	ori	r24, 0x1A	; 26
 1b0:	80 83       	st	Z, r24
 1b2:	89 ef       	ldi	r24, 0xF9	; 249
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <__TEXT_REGION_LENGTH__+0x700127>
 1ba:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__TEXT_REGION_LENGTH__+0x700126>
 1be:	08 95       	ret

000001c0 <_Z10setforwardv>:
 1c0:	e8 e0       	ldi	r30, 0x08	; 8
 1c2:	f1 e0       	ldi	r31, 0x01	; 1
 1c4:	80 81       	ld	r24, Z
 1c6:	80 64       	ori	r24, 0x40	; 64
 1c8:	80 83       	st	Z, r24
 1ca:	80 81       	ld	r24, Z
 1cc:	8f 77       	andi	r24, 0x7F	; 127
 1ce:	80 83       	st	Z, r24
 1d0:	08 95       	ret

000001d2 <main>:
 1d2:	89 e1       	ldi	r24, 0x19	; 25
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	8c d0       	rcall	.+280    	; 0x2f0 <_Z10uart0_initj>
 1d8:	78 94       	sei
 1da:	d4 df       	rcall	.-88     	; 0x184 <_Z7initpwmv>
 1dc:	0c e2       	ldi	r16, 0x2C	; 44
 1de:	11 e0       	ldi	r17, 0x01	; 1
 1e0:	c4 e1       	ldi	r28, 0x14	; 20
 1e2:	d0 e0       	ldi	r29, 0x00	; 0
 1e4:	f8 01       	movw	r30, r16
 1e6:	d1 83       	std	Z+1, r29	; 0x01
 1e8:	c0 83       	st	Z, r28
 1ea:	ea df       	rcall	.-44     	; 0x1c0 <_Z10setforwardv>
 1ec:	e5 d0       	rcall	.+458    	; 0x3b8 <_Z15uart0_availablev>
 1ee:	18 16       	cp	r1, r24
 1f0:	19 06       	cpc	r1, r25
 1f2:	7c f4       	brge	.+30     	; 0x212 <main+0x40>
 1f4:	86 e0       	ldi	r24, 0x06	; 6
 1f6:	92 e0       	ldi	r25, 0x02	; 2
 1f8:	b5 df       	rcall	.-150    	; 0x164 <_ZN7encoder9get_angleEv>
 1fa:	a8 d0       	rcall	.+336    	; 0x34c <_Z12uart0_putinti>
 1fc:	80 e0       	ldi	r24, 0x00	; 0
 1fe:	92 e0       	ldi	r25, 0x02	; 2
 200:	cd d0       	rcall	.+410    	; 0x39c <_Z10uart0_putsPKc>
 202:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <__data_end>
 206:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <__data_end+0x1>
 20a:	a0 d0       	rcall	.+320    	; 0x34c <_Z12uart0_putinti>
 20c:	83 e0       	ldi	r24, 0x03	; 3
 20e:	92 e0       	ldi	r25, 0x02	; 2
 210:	c5 d0       	rcall	.+394    	; 0x39c <_Z10uart0_putsPKc>
 212:	8f e3       	ldi	r24, 0x3F	; 63
 214:	9c e9       	ldi	r25, 0x9C	; 156
 216:	01 97       	sbiw	r24, 0x01	; 1
 218:	f1 f7       	brne	.-4      	; 0x216 <main+0x44>
 21a:	00 c0       	rjmp	.+0      	; 0x21c <main+0x4a>
 21c:	00 00       	nop
 21e:	e2 cf       	rjmp	.-60     	; 0x1e4 <main+0x12>

00000220 <_GLOBAL__sub_I_e>:
		
		int speed;
		encoder()
		{
			
			count_encoder= 0;
 220:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <__data_end+0x1>
 224:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <__data_end>
			Init_encoder_interrupt();
 228:	86 e0       	ldi	r24, 0x06	; 6
 22a:	92 e0       	ldi	r25, 0x02	; 2
 22c:	8b df       	rcall	.-234    	; 0x144 <_ZN7encoder22Init_encoder_interruptEv>
			Init_timer();
 22e:	86 e0       	ldi	r24, 0x06	; 6
 230:	92 e0       	ldi	r25, 0x02	; 2
 232:	90 cf       	rjmp	.-224    	; 0x154 <_ZN7encoder10Init_timerEv>
 234:	08 95       	ret

00000236 <__vector_25>:
 Input:    None
 Returns:  None
 **************************************************************************/
void uart2_flush(void)
{
	UART2_RxHead = UART2_RxTail;
 236:	1f 92       	push	r1
 238:	0f 92       	push	r0
 23a:	0f b6       	in	r0, 0x3f	; 63
 23c:	0f 92       	push	r0
 23e:	11 24       	eor	r1, r1
 240:	0b b6       	in	r0, 0x3b	; 59
 242:	0f 92       	push	r0
 244:	2f 93       	push	r18
 246:	8f 93       	push	r24
 248:	9f 93       	push	r25
 24a:	ef 93       	push	r30
 24c:	ff 93       	push	r31
 24e:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
 252:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 256:	88 71       	andi	r24, 0x18	; 24
 258:	e0 91 db 02 	lds	r30, 0x02DB	; 0x8002db <_ZL12UART0_RxHead>
 25c:	ef 5f       	subi	r30, 0xFF	; 255
 25e:	ef 71       	andi	r30, 0x1F	; 31
 260:	90 91 da 02 	lds	r25, 0x02DA	; 0x8002da <_ZL12UART0_RxTail>
 264:	e9 17       	cp	r30, r25
 266:	39 f0       	breq	.+14     	; 0x276 <__vector_25+0x40>
 268:	e0 93 db 02 	sts	0x02DB, r30	; 0x8002db <_ZL12UART0_RxHead>
 26c:	f0 e0       	ldi	r31, 0x00	; 0
 26e:	e2 52       	subi	r30, 0x22	; 34
 270:	fd 4f       	sbci	r31, 0xFD	; 253
 272:	20 83       	st	Z, r18
 274:	01 c0       	rjmp	.+2      	; 0x278 <__vector_25+0x42>
 276:	82 e0       	ldi	r24, 0x02	; 2
 278:	80 93 d9 02 	sts	0x02D9, r24	; 0x8002d9 <_ZL17UART0_LastRxError>
 27c:	ff 91       	pop	r31
 27e:	ef 91       	pop	r30
 280:	9f 91       	pop	r25
 282:	8f 91       	pop	r24
 284:	2f 91       	pop	r18
 286:	0f 90       	pop	r0
 288:	0b be       	out	0x3b, r0	; 59
 28a:	0f 90       	pop	r0
 28c:	0f be       	out	0x3f, r0	; 63
 28e:	0f 90       	pop	r0
 290:	1f 90       	pop	r1
 292:	18 95       	reti

00000294 <__vector_26>:
 294:	1f 92       	push	r1
 296:	0f 92       	push	r0
 298:	0f b6       	in	r0, 0x3f	; 63
 29a:	0f 92       	push	r0
 29c:	11 24       	eor	r1, r1
 29e:	0b b6       	in	r0, 0x3b	; 59
 2a0:	0f 92       	push	r0
 2a2:	8f 93       	push	r24
 2a4:	9f 93       	push	r25
 2a6:	ef 93       	push	r30
 2a8:	ff 93       	push	r31
 2aa:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <_ZL12UART0_TxHead>
 2ae:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <_ZL12UART0_TxTail>
 2b2:	98 17       	cp	r25, r24
 2b4:	69 f0       	breq	.+26     	; 0x2d0 <__vector_26+0x3c>
 2b6:	e0 91 dc 02 	lds	r30, 0x02DC	; 0x8002dc <_ZL12UART0_TxTail>
 2ba:	ef 5f       	subi	r30, 0xFF	; 255
 2bc:	ef 71       	andi	r30, 0x1F	; 31
 2be:	e0 93 dc 02 	sts	0x02DC, r30	; 0x8002dc <_ZL12UART0_TxTail>
 2c2:	f0 e0       	ldi	r31, 0x00	; 0
 2c4:	e2 50       	subi	r30, 0x02	; 2
 2c6:	fd 4f       	sbci	r31, 0xFD	; 253
 2c8:	80 81       	ld	r24, Z
 2ca:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 2ce:	05 c0       	rjmp	.+10     	; 0x2da <__vector_26+0x46>
 2d0:	e1 ec       	ldi	r30, 0xC1	; 193
 2d2:	f0 e0       	ldi	r31, 0x00	; 0
 2d4:	80 81       	ld	r24, Z
 2d6:	8f 7d       	andi	r24, 0xDF	; 223
 2d8:	80 83       	st	Z, r24
 2da:	ff 91       	pop	r31
 2dc:	ef 91       	pop	r30
 2de:	9f 91       	pop	r25
 2e0:	8f 91       	pop	r24
 2e2:	0f 90       	pop	r0
 2e4:	0b be       	out	0x3b, r0	; 59
 2e6:	0f 90       	pop	r0
 2e8:	0f be       	out	0x3f, r0	; 63
 2ea:	0f 90       	pop	r0
 2ec:	1f 90       	pop	r1
 2ee:	18 95       	reti

000002f0 <_Z10uart0_initj>:
 2f0:	10 92 dd 02 	sts	0x02DD, r1	; 0x8002dd <_ZL12UART0_TxHead>
 2f4:	10 92 dc 02 	sts	0x02DC, r1	; 0x8002dc <_ZL12UART0_TxTail>
 2f8:	10 92 db 02 	sts	0x02DB, r1	; 0x8002db <_ZL12UART0_RxHead>
 2fc:	10 92 da 02 	sts	0x02DA, r1	; 0x8002da <_ZL12UART0_RxTail>
 300:	99 23       	and	r25, r25
 302:	24 f4       	brge	.+8      	; 0x30c <_Z10uart0_initj+0x1c>
 304:	22 e0       	ldi	r18, 0x02	; 2
 306:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
 30a:	9f 77       	andi	r25, 0x7F	; 127
 30c:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 310:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 314:	88 e9       	ldi	r24, 0x98	; 152
 316:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
 31a:	86 e0       	ldi	r24, 0x06	; 6
 31c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
 320:	08 95       	ret

00000322 <_Z10uart0_putch>:
 322:	20 91 dd 02 	lds	r18, 0x02DD	; 0x8002dd <_ZL12UART0_TxHead>
 326:	2f 5f       	subi	r18, 0xFF	; 255
 328:	2f 71       	andi	r18, 0x1F	; 31
 32a:	90 91 dc 02 	lds	r25, 0x02DC	; 0x8002dc <_ZL12UART0_TxTail>
 32e:	29 17       	cp	r18, r25
 330:	e1 f3       	breq	.-8      	; 0x32a <_Z10uart0_putch+0x8>
 332:	e2 2f       	mov	r30, r18
 334:	f0 e0       	ldi	r31, 0x00	; 0
 336:	e2 50       	subi	r30, 0x02	; 2
 338:	fd 4f       	sbci	r31, 0xFD	; 253
 33a:	80 83       	st	Z, r24
 33c:	20 93 dd 02 	sts	0x02DD, r18	; 0x8002dd <_ZL12UART0_TxHead>
 340:	e1 ec       	ldi	r30, 0xC1	; 193
 342:	f0 e0       	ldi	r31, 0x00	; 0
 344:	80 81       	ld	r24, Z
 346:	80 62       	ori	r24, 0x20	; 32
 348:	80 83       	st	Z, r24
 34a:	08 95       	ret

0000034c <_Z12uart0_putinti>:
 34c:	0f 93       	push	r16
 34e:	1f 93       	push	r17
 350:	cf 93       	push	r28
 352:	df 93       	push	r29
 354:	cd b7       	in	r28, 0x3d	; 61
 356:	de b7       	in	r29, 0x3e	; 62
 358:	2f 97       	sbiw	r28, 0x0f	; 15
 35a:	0f b6       	in	r0, 0x3f	; 63
 35c:	f8 94       	cli
 35e:	de bf       	out	0x3e, r29	; 62
 360:	0f be       	out	0x3f, r0	; 63
 362:	cd bf       	out	0x3d, r28	; 61
 364:	4a e0       	ldi	r20, 0x0A	; 10
 366:	be 01       	movw	r22, r28
 368:	6f 5f       	subi	r22, 0xFF	; 255
 36a:	7f 4f       	sbci	r23, 0xFF	; 255
 36c:	71 d2       	rcall	.+1250   	; 0x850 <__itoa_ncheck>
 36e:	89 81       	ldd	r24, Y+1	; 0x01
 370:	88 23       	and	r24, r24
 372:	49 f0       	breq	.+18     	; 0x386 <_Z12uart0_putinti+0x3a>
 374:	8e 01       	movw	r16, r28
 376:	0e 5f       	subi	r16, 0xFE	; 254
 378:	1f 4f       	sbci	r17, 0xFF	; 255
 37a:	d3 df       	rcall	.-90     	; 0x322 <_Z10uart0_putch>
 37c:	f8 01       	movw	r30, r16
 37e:	81 91       	ld	r24, Z+
 380:	8f 01       	movw	r16, r30
 382:	81 11       	cpse	r24, r1
 384:	fa cf       	rjmp	.-12     	; 0x37a <_Z12uart0_putinti+0x2e>
 386:	2f 96       	adiw	r28, 0x0f	; 15
 388:	0f b6       	in	r0, 0x3f	; 63
 38a:	f8 94       	cli
 38c:	de bf       	out	0x3e, r29	; 62
 38e:	0f be       	out	0x3f, r0	; 63
 390:	cd bf       	out	0x3d, r28	; 61
 392:	df 91       	pop	r29
 394:	cf 91       	pop	r28
 396:	1f 91       	pop	r17
 398:	0f 91       	pop	r16
 39a:	08 95       	ret

0000039c <_Z10uart0_putsPKc>:
 39c:	cf 93       	push	r28
 39e:	df 93       	push	r29
 3a0:	ec 01       	movw	r28, r24
 3a2:	88 81       	ld	r24, Y
 3a4:	88 23       	and	r24, r24
 3a6:	29 f0       	breq	.+10     	; 0x3b2 <_Z10uart0_putsPKc+0x16>
 3a8:	21 96       	adiw	r28, 0x01	; 1
 3aa:	bb df       	rcall	.-138    	; 0x322 <_Z10uart0_putch>
 3ac:	89 91       	ld	r24, Y+
 3ae:	81 11       	cpse	r24, r1
 3b0:	fc cf       	rjmp	.-8      	; 0x3aa <_Z10uart0_putsPKc+0xe>
 3b2:	df 91       	pop	r29
 3b4:	cf 91       	pop	r28
 3b6:	08 95       	ret

000003b8 <_Z15uart0_availablev>:
 3b8:	30 91 db 02 	lds	r19, 0x02DB	; 0x8002db <_ZL12UART0_RxHead>
 3bc:	20 91 da 02 	lds	r18, 0x02DA	; 0x8002da <_ZL12UART0_RxTail>
 3c0:	81 e0       	ldi	r24, 0x01	; 1
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	32 13       	cpse	r19, r18
 3c6:	02 c0       	rjmp	.+4      	; 0x3cc <_Z15uart0_availablev+0x14>
 3c8:	80 e0       	ldi	r24, 0x00	; 0
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	08 95       	ret

000003ce <__vector_36>:
 3ce:	1f 92       	push	r1
 3d0:	0f 92       	push	r0
 3d2:	0f b6       	in	r0, 0x3f	; 63
 3d4:	0f 92       	push	r0
 3d6:	11 24       	eor	r1, r1
 3d8:	0b b6       	in	r0, 0x3b	; 59
 3da:	0f 92       	push	r0
 3dc:	2f 93       	push	r18
 3de:	8f 93       	push	r24
 3e0:	9f 93       	push	r25
 3e2:	ef 93       	push	r30
 3e4:	ff 93       	push	r31
 3e6:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7000c8>
 3ea:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
 3ee:	88 71       	andi	r24, 0x18	; 24
 3f0:	e0 91 96 02 	lds	r30, 0x0296	; 0x800296 <_ZL12UART1_RxHead>
 3f4:	ef 5f       	subi	r30, 0xFF	; 255
 3f6:	ef 71       	andi	r30, 0x1F	; 31
 3f8:	90 91 95 02 	lds	r25, 0x0295	; 0x800295 <_ZL12UART1_RxTail>
 3fc:	e9 17       	cp	r30, r25
 3fe:	39 f0       	breq	.+14     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 400:	e0 93 96 02 	sts	0x0296, r30	; 0x800296 <_ZL12UART1_RxHead>
 404:	f0 e0       	ldi	r31, 0x00	; 0
 406:	e7 56       	subi	r30, 0x67	; 103
 408:	fd 4f       	sbci	r31, 0xFD	; 253
 40a:	20 83       	st	Z, r18
 40c:	01 c0       	rjmp	.+2      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 40e:	82 e0       	ldi	r24, 0x02	; 2
 410:	80 93 94 02 	sts	0x0294, r24	; 0x800294 <_ZL17UART1_LastRxError>
 414:	ff 91       	pop	r31
 416:	ef 91       	pop	r30
 418:	9f 91       	pop	r25
 41a:	8f 91       	pop	r24
 41c:	2f 91       	pop	r18
 41e:	0f 90       	pop	r0
 420:	0b be       	out	0x3b, r0	; 59
 422:	0f 90       	pop	r0
 424:	0f be       	out	0x3f, r0	; 63
 426:	0f 90       	pop	r0
 428:	1f 90       	pop	r1
 42a:	18 95       	reti

0000042c <__vector_37>:
 42c:	1f 92       	push	r1
 42e:	0f 92       	push	r0
 430:	0f b6       	in	r0, 0x3f	; 63
 432:	0f 92       	push	r0
 434:	11 24       	eor	r1, r1
 436:	0b b6       	in	r0, 0x3b	; 59
 438:	0f 92       	push	r0
 43a:	8f 93       	push	r24
 43c:	9f 93       	push	r25
 43e:	ef 93       	push	r30
 440:	ff 93       	push	r31
 442:	90 91 98 02 	lds	r25, 0x0298	; 0x800298 <_ZL12UART1_TxHead>
 446:	80 91 97 02 	lds	r24, 0x0297	; 0x800297 <_ZL12UART1_TxTail>
 44a:	98 17       	cp	r25, r24
 44c:	69 f0       	breq	.+26     	; 0x468 <__vector_37+0x3c>
 44e:	e0 91 97 02 	lds	r30, 0x0297	; 0x800297 <_ZL12UART1_TxTail>
 452:	ef 5f       	subi	r30, 0xFF	; 255
 454:	ef 71       	andi	r30, 0x1F	; 31
 456:	e0 93 97 02 	sts	0x0297, r30	; 0x800297 <_ZL12UART1_TxTail>
 45a:	f0 e0       	ldi	r31, 0x00	; 0
 45c:	e7 54       	subi	r30, 0x47	; 71
 45e:	fd 4f       	sbci	r31, 0xFD	; 253
 460:	80 81       	ld	r24, Z
 462:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
 466:	05 c0       	rjmp	.+10     	; 0x472 <__vector_37+0x46>
 468:	e9 ec       	ldi	r30, 0xC9	; 201
 46a:	f0 e0       	ldi	r31, 0x00	; 0
 46c:	80 81       	ld	r24, Z
 46e:	8f 7d       	andi	r24, 0xDF	; 223
 470:	80 83       	st	Z, r24
 472:	ff 91       	pop	r31
 474:	ef 91       	pop	r30
 476:	9f 91       	pop	r25
 478:	8f 91       	pop	r24
 47a:	0f 90       	pop	r0
 47c:	0b be       	out	0x3b, r0	; 59
 47e:	0f 90       	pop	r0
 480:	0f be       	out	0x3f, r0	; 63
 482:	0f 90       	pop	r0
 484:	1f 90       	pop	r1
 486:	18 95       	reti

00000488 <__vector_51>:
 488:	1f 92       	push	r1
 48a:	0f 92       	push	r0
 48c:	0f b6       	in	r0, 0x3f	; 63
 48e:	0f 92       	push	r0
 490:	11 24       	eor	r1, r1
 492:	0b b6       	in	r0, 0x3b	; 59
 494:	0f 92       	push	r0
 496:	2f 93       	push	r18
 498:	8f 93       	push	r24
 49a:	9f 93       	push	r25
 49c:	ef 93       	push	r30
 49e:	ff 93       	push	r31
 4a0:	80 91 d0 00 	lds	r24, 0x00D0	; 0x8000d0 <__TEXT_REGION_LENGTH__+0x7000d0>
 4a4:	20 91 d6 00 	lds	r18, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
 4a8:	88 71       	andi	r24, 0x18	; 24
 4aa:	e0 91 51 02 	lds	r30, 0x0251	; 0x800251 <_ZL12UART2_RxHead>
 4ae:	ef 5f       	subi	r30, 0xFF	; 255
 4b0:	ef 71       	andi	r30, 0x1F	; 31
 4b2:	90 91 50 02 	lds	r25, 0x0250	; 0x800250 <_ZL12UART2_RxTail>
 4b6:	e9 17       	cp	r30, r25
 4b8:	39 f0       	breq	.+14     	; 0x4c8 <__vector_51+0x40>
 4ba:	e0 93 51 02 	sts	0x0251, r30	; 0x800251 <_ZL12UART2_RxHead>
 4be:	f0 e0       	ldi	r31, 0x00	; 0
 4c0:	ec 5a       	subi	r30, 0xAC	; 172
 4c2:	fd 4f       	sbci	r31, 0xFD	; 253
 4c4:	20 83       	st	Z, r18
 4c6:	01 c0       	rjmp	.+2      	; 0x4ca <__vector_51+0x42>
 4c8:	82 e0       	ldi	r24, 0x02	; 2
 4ca:	80 93 4f 02 	sts	0x024F, r24	; 0x80024f <_ZL17UART2_LastRxError>
 4ce:	ff 91       	pop	r31
 4d0:	ef 91       	pop	r30
 4d2:	9f 91       	pop	r25
 4d4:	8f 91       	pop	r24
 4d6:	2f 91       	pop	r18
 4d8:	0f 90       	pop	r0
 4da:	0b be       	out	0x3b, r0	; 59
 4dc:	0f 90       	pop	r0
 4de:	0f be       	out	0x3f, r0	; 63
 4e0:	0f 90       	pop	r0
 4e2:	1f 90       	pop	r1
 4e4:	18 95       	reti

000004e6 <__vector_52>:
 4e6:	1f 92       	push	r1
 4e8:	0f 92       	push	r0
 4ea:	0f b6       	in	r0, 0x3f	; 63
 4ec:	0f 92       	push	r0
 4ee:	11 24       	eor	r1, r1
 4f0:	0b b6       	in	r0, 0x3b	; 59
 4f2:	0f 92       	push	r0
 4f4:	8f 93       	push	r24
 4f6:	9f 93       	push	r25
 4f8:	ef 93       	push	r30
 4fa:	ff 93       	push	r31
 4fc:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <_ZL12UART2_TxHead>
 500:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <_ZL12UART2_TxTail>
 504:	98 17       	cp	r25, r24
 506:	69 f0       	breq	.+26     	; 0x522 <__vector_52+0x3c>
 508:	e0 91 52 02 	lds	r30, 0x0252	; 0x800252 <_ZL12UART2_TxTail>
 50c:	ef 5f       	subi	r30, 0xFF	; 255
 50e:	ef 71       	andi	r30, 0x1F	; 31
 510:	e0 93 52 02 	sts	0x0252, r30	; 0x800252 <_ZL12UART2_TxTail>
 514:	f0 e0       	ldi	r31, 0x00	; 0
 516:	ec 58       	subi	r30, 0x8C	; 140
 518:	fd 4f       	sbci	r31, 0xFD	; 253
 51a:	80 81       	ld	r24, Z
 51c:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
 520:	05 c0       	rjmp	.+10     	; 0x52c <__vector_52+0x46>
 522:	e1 ed       	ldi	r30, 0xD1	; 209
 524:	f0 e0       	ldi	r31, 0x00	; 0
 526:	80 81       	ld	r24, Z
 528:	8f 7d       	andi	r24, 0xDF	; 223
 52a:	80 83       	st	Z, r24
 52c:	ff 91       	pop	r31
 52e:	ef 91       	pop	r30
 530:	9f 91       	pop	r25
 532:	8f 91       	pop	r24
 534:	0f 90       	pop	r0
 536:	0b be       	out	0x3b, r0	; 59
 538:	0f 90       	pop	r0
 53a:	0f be       	out	0x3f, r0	; 63
 53c:	0f 90       	pop	r0
 53e:	1f 90       	pop	r1
 540:	18 95       	reti

00000542 <__vector_54>:
ISR(UART3_RECEIVE_INTERRUPT)
/*************************************************************************
Function: UART3 Receive Complete interrupt
Purpose:  called when the UART3 has received a character
**************************************************************************/
{
 542:	1f 92       	push	r1
 544:	0f 92       	push	r0
 546:	0f b6       	in	r0, 0x3f	; 63
 548:	0f 92       	push	r0
 54a:	11 24       	eor	r1, r1
 54c:	0b b6       	in	r0, 0x3b	; 59
 54e:	0f 92       	push	r0
 550:	2f 93       	push	r18
 552:	8f 93       	push	r24
 554:	9f 93       	push	r25
 556:	ef 93       	push	r30
 558:	ff 93       	push	r31
	unsigned char usr;
	unsigned char lastRxError;


	/* read UART status register and UART data register */
	usr = UART3_STATUS;
 55a:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__TEXT_REGION_LENGTH__+0x700130>
	data = UART3_DATA;
 55e:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
	

	/* */
	lastRxError = (usr & (_BV(FE3) | _BV(DOR3)));
 562:	88 71       	andi	r24, 0x18	; 24

	/* calculate buffer index */
	tmphead = (UART3_RxHead + 1) & UART_RX_BUFFER_MASK;
 564:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <_ZL12UART3_RxHead>
 568:	ef 5f       	subi	r30, 0xFF	; 255
 56a:	ef 71       	andi	r30, 0x1F	; 31

	if (tmphead == UART3_RxTail) {
 56c:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <_ZL12UART3_RxTail>
 570:	e9 17       	cp	r30, r25
 572:	39 f0       	breq	.+14     	; 0x582 <__vector_54+0x40>
		/* error: receive buffer overflow */
		lastRxError = UART_BUFFER_OVERFLOW >> 8;
	}
	else {
		/* store new index */
		UART3_RxHead = tmphead;
 574:	e0 93 0c 02 	sts	0x020C, r30	; 0x80020c <_ZL12UART3_RxHead>
		/* store received data in buffer */
		UART3_RxBuf[tmphead] = data;
 578:	f0 e0       	ldi	r31, 0x00	; 0
 57a:	e1 5f       	subi	r30, 0xF1	; 241
 57c:	fd 4f       	sbci	r31, 0xFD	; 253
 57e:	20 83       	st	Z, r18
 580:	01 c0       	rjmp	.+2      	; 0x584 <__vector_54+0x42>
	/* calculate buffer index */
	tmphead = (UART3_RxHead + 1) & UART_RX_BUFFER_MASK;

	if (tmphead == UART3_RxTail) {
		/* error: receive buffer overflow */
		lastRxError = UART_BUFFER_OVERFLOW >> 8;
 582:	82 e0       	ldi	r24, 0x02	; 2
		/* store new index */
		UART3_RxHead = tmphead;
		/* store received data in buffer */
		UART3_RxBuf[tmphead] = data;
	}
	UART3_LastRxError = lastRxError;
 584:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <_ZL17UART3_LastRxError>
}
 588:	ff 91       	pop	r31
 58a:	ef 91       	pop	r30
 58c:	9f 91       	pop	r25
 58e:	8f 91       	pop	r24
 590:	2f 91       	pop	r18
 592:	0f 90       	pop	r0
 594:	0b be       	out	0x3b, r0	; 59
 596:	0f 90       	pop	r0
 598:	0f be       	out	0x3f, r0	; 63
 59a:	0f 90       	pop	r0
 59c:	1f 90       	pop	r1
 59e:	18 95       	reti

000005a0 <__vector_55>:
ISR(UART3_TRANSMIT_INTERRUPT)
/*************************************************************************
Function: UART3 Data Register Empty interrupt
Purpose:  called when the UART3 is ready to transmit the next byte
**************************************************************************/
{
 5a0:	1f 92       	push	r1
 5a2:	0f 92       	push	r0
 5a4:	0f b6       	in	r0, 0x3f	; 63
 5a6:	0f 92       	push	r0
 5a8:	11 24       	eor	r1, r1
 5aa:	0b b6       	in	r0, 0x3b	; 59
 5ac:	0f 92       	push	r0
 5ae:	8f 93       	push	r24
 5b0:	9f 93       	push	r25
 5b2:	ef 93       	push	r30
 5b4:	ff 93       	push	r31
	unsigned char tmptail;


	if (UART3_TxHead != UART3_TxTail) {
 5b6:	90 91 0e 02 	lds	r25, 0x020E	; 0x80020e <_ZL12UART3_TxHead>
 5ba:	80 91 0d 02 	lds	r24, 0x020D	; 0x80020d <_ZL12UART3_TxTail>
 5be:	98 17       	cp	r25, r24
 5c0:	69 f0       	breq	.+26     	; 0x5dc <__vector_55+0x3c>
		/* calculate and store new buffer index */
		tmptail = (UART3_TxTail + 1) & UART_TX_BUFFER_MASK;
 5c2:	e0 91 0d 02 	lds	r30, 0x020D	; 0x80020d <_ZL12UART3_TxTail>
 5c6:	ef 5f       	subi	r30, 0xFF	; 255
 5c8:	ef 71       	andi	r30, 0x1F	; 31
		UART3_TxTail = tmptail;
 5ca:	e0 93 0d 02 	sts	0x020D, r30	; 0x80020d <_ZL12UART3_TxTail>
		/* get one byte from buffer and write it to UART */
		UART3_DATA = UART3_TxBuf[tmptail];  /* start transmission */
 5ce:	f0 e0       	ldi	r31, 0x00	; 0
 5d0:	e1 5d       	subi	r30, 0xD1	; 209
 5d2:	fd 4f       	sbci	r31, 0xFD	; 253
 5d4:	80 81       	ld	r24, Z
 5d6:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
 5da:	05 c0       	rjmp	.+10     	; 0x5e6 <__vector_55+0x46>
	}
	else {
		/* tx buffer empty, disable UDRE interrupt */
		UART3_CONTROL &= ~_BV(UART3_UDRIE);
 5dc:	e1 e3       	ldi	r30, 0x31	; 49
 5de:	f1 e0       	ldi	r31, 0x01	; 1
 5e0:	80 81       	ld	r24, Z
 5e2:	8f 7d       	andi	r24, 0xDF	; 223
 5e4:	80 83       	st	Z, r24
	}
}
 5e6:	ff 91       	pop	r31
 5e8:	ef 91       	pop	r30
 5ea:	9f 91       	pop	r25
 5ec:	8f 91       	pop	r24
 5ee:	0f 90       	pop	r0
 5f0:	0b be       	out	0x3b, r0	; 59
 5f2:	0f 90       	pop	r0
 5f4:	0f be       	out	0x3f, r0	; 63
 5f6:	0f 90       	pop	r0
 5f8:	1f 90       	pop	r1
 5fa:	18 95       	reti

000005fc <__fixsfsi>:
 5fc:	04 d0       	rcall	.+8      	; 0x606 <__fixunssfsi>
 5fe:	68 94       	set
 600:	b1 11       	cpse	r27, r1
 602:	8d c0       	rjmp	.+282    	; 0x71e <__fp_szero>
 604:	08 95       	ret

00000606 <__fixunssfsi>:
 606:	70 d0       	rcall	.+224    	; 0x6e8 <__fp_splitA>
 608:	88 f0       	brcs	.+34     	; 0x62c <__fixunssfsi+0x26>
 60a:	9f 57       	subi	r25, 0x7F	; 127
 60c:	90 f0       	brcs	.+36     	; 0x632 <__fixunssfsi+0x2c>
 60e:	b9 2f       	mov	r27, r25
 610:	99 27       	eor	r25, r25
 612:	b7 51       	subi	r27, 0x17	; 23
 614:	a0 f0       	brcs	.+40     	; 0x63e <__fixunssfsi+0x38>
 616:	d1 f0       	breq	.+52     	; 0x64c <__fixunssfsi+0x46>
 618:	66 0f       	add	r22, r22
 61a:	77 1f       	adc	r23, r23
 61c:	88 1f       	adc	r24, r24
 61e:	99 1f       	adc	r25, r25
 620:	1a f0       	brmi	.+6      	; 0x628 <__fixunssfsi+0x22>
 622:	ba 95       	dec	r27
 624:	c9 f7       	brne	.-14     	; 0x618 <__fixunssfsi+0x12>
 626:	12 c0       	rjmp	.+36     	; 0x64c <__fixunssfsi+0x46>
 628:	b1 30       	cpi	r27, 0x01	; 1
 62a:	81 f0       	breq	.+32     	; 0x64c <__fixunssfsi+0x46>
 62c:	77 d0       	rcall	.+238    	; 0x71c <__fp_zero>
 62e:	b1 e0       	ldi	r27, 0x01	; 1
 630:	08 95       	ret
 632:	74 c0       	rjmp	.+232    	; 0x71c <__fp_zero>
 634:	67 2f       	mov	r22, r23
 636:	78 2f       	mov	r23, r24
 638:	88 27       	eor	r24, r24
 63a:	b8 5f       	subi	r27, 0xF8	; 248
 63c:	39 f0       	breq	.+14     	; 0x64c <__fixunssfsi+0x46>
 63e:	b9 3f       	cpi	r27, 0xF9	; 249
 640:	cc f3       	brlt	.-14     	; 0x634 <__fixunssfsi+0x2e>
 642:	86 95       	lsr	r24
 644:	77 95       	ror	r23
 646:	67 95       	ror	r22
 648:	b3 95       	inc	r27
 64a:	d9 f7       	brne	.-10     	; 0x642 <__fixunssfsi+0x3c>
 64c:	3e f4       	brtc	.+14     	; 0x65c <__fixunssfsi+0x56>
 64e:	90 95       	com	r25
 650:	80 95       	com	r24
 652:	70 95       	com	r23
 654:	61 95       	neg	r22
 656:	7f 4f       	sbci	r23, 0xFF	; 255
 658:	8f 4f       	sbci	r24, 0xFF	; 255
 65a:	9f 4f       	sbci	r25, 0xFF	; 255
 65c:	08 95       	ret

0000065e <__floatunsisf>:
 65e:	e8 94       	clt
 660:	09 c0       	rjmp	.+18     	; 0x674 <__floatsisf+0x12>

00000662 <__floatsisf>:
 662:	97 fb       	bst	r25, 7
 664:	3e f4       	brtc	.+14     	; 0x674 <__floatsisf+0x12>
 666:	90 95       	com	r25
 668:	80 95       	com	r24
 66a:	70 95       	com	r23
 66c:	61 95       	neg	r22
 66e:	7f 4f       	sbci	r23, 0xFF	; 255
 670:	8f 4f       	sbci	r24, 0xFF	; 255
 672:	9f 4f       	sbci	r25, 0xFF	; 255
 674:	99 23       	and	r25, r25
 676:	a9 f0       	breq	.+42     	; 0x6a2 <__floatsisf+0x40>
 678:	f9 2f       	mov	r31, r25
 67a:	96 e9       	ldi	r25, 0x96	; 150
 67c:	bb 27       	eor	r27, r27
 67e:	93 95       	inc	r25
 680:	f6 95       	lsr	r31
 682:	87 95       	ror	r24
 684:	77 95       	ror	r23
 686:	67 95       	ror	r22
 688:	b7 95       	ror	r27
 68a:	f1 11       	cpse	r31, r1
 68c:	f8 cf       	rjmp	.-16     	; 0x67e <__floatsisf+0x1c>
 68e:	fa f4       	brpl	.+62     	; 0x6ce <__floatsisf+0x6c>
 690:	bb 0f       	add	r27, r27
 692:	11 f4       	brne	.+4      	; 0x698 <__floatsisf+0x36>
 694:	60 ff       	sbrs	r22, 0
 696:	1b c0       	rjmp	.+54     	; 0x6ce <__floatsisf+0x6c>
 698:	6f 5f       	subi	r22, 0xFF	; 255
 69a:	7f 4f       	sbci	r23, 0xFF	; 255
 69c:	8f 4f       	sbci	r24, 0xFF	; 255
 69e:	9f 4f       	sbci	r25, 0xFF	; 255
 6a0:	16 c0       	rjmp	.+44     	; 0x6ce <__floatsisf+0x6c>
 6a2:	88 23       	and	r24, r24
 6a4:	11 f0       	breq	.+4      	; 0x6aa <__floatsisf+0x48>
 6a6:	96 e9       	ldi	r25, 0x96	; 150
 6a8:	11 c0       	rjmp	.+34     	; 0x6cc <__floatsisf+0x6a>
 6aa:	77 23       	and	r23, r23
 6ac:	21 f0       	breq	.+8      	; 0x6b6 <__floatsisf+0x54>
 6ae:	9e e8       	ldi	r25, 0x8E	; 142
 6b0:	87 2f       	mov	r24, r23
 6b2:	76 2f       	mov	r23, r22
 6b4:	05 c0       	rjmp	.+10     	; 0x6c0 <__floatsisf+0x5e>
 6b6:	66 23       	and	r22, r22
 6b8:	71 f0       	breq	.+28     	; 0x6d6 <__floatsisf+0x74>
 6ba:	96 e8       	ldi	r25, 0x86	; 134
 6bc:	86 2f       	mov	r24, r22
 6be:	70 e0       	ldi	r23, 0x00	; 0
 6c0:	60 e0       	ldi	r22, 0x00	; 0
 6c2:	2a f0       	brmi	.+10     	; 0x6ce <__floatsisf+0x6c>
 6c4:	9a 95       	dec	r25
 6c6:	66 0f       	add	r22, r22
 6c8:	77 1f       	adc	r23, r23
 6ca:	88 1f       	adc	r24, r24
 6cc:	da f7       	brpl	.-10     	; 0x6c4 <__floatsisf+0x62>
 6ce:	88 0f       	add	r24, r24
 6d0:	96 95       	lsr	r25
 6d2:	87 95       	ror	r24
 6d4:	97 f9       	bld	r25, 7
 6d6:	08 95       	ret

000006d8 <__fp_split3>:
 6d8:	57 fd       	sbrc	r21, 7
 6da:	90 58       	subi	r25, 0x80	; 128
 6dc:	44 0f       	add	r20, r20
 6de:	55 1f       	adc	r21, r21
 6e0:	59 f0       	breq	.+22     	; 0x6f8 <__fp_splitA+0x10>
 6e2:	5f 3f       	cpi	r21, 0xFF	; 255
 6e4:	71 f0       	breq	.+28     	; 0x702 <__fp_splitA+0x1a>
 6e6:	47 95       	ror	r20

000006e8 <__fp_splitA>:
 6e8:	88 0f       	add	r24, r24
 6ea:	97 fb       	bst	r25, 7
 6ec:	99 1f       	adc	r25, r25
 6ee:	61 f0       	breq	.+24     	; 0x708 <__fp_splitA+0x20>
 6f0:	9f 3f       	cpi	r25, 0xFF	; 255
 6f2:	79 f0       	breq	.+30     	; 0x712 <__fp_splitA+0x2a>
 6f4:	87 95       	ror	r24
 6f6:	08 95       	ret
 6f8:	12 16       	cp	r1, r18
 6fa:	13 06       	cpc	r1, r19
 6fc:	14 06       	cpc	r1, r20
 6fe:	55 1f       	adc	r21, r21
 700:	f2 cf       	rjmp	.-28     	; 0x6e6 <__fp_split3+0xe>
 702:	46 95       	lsr	r20
 704:	f1 df       	rcall	.-30     	; 0x6e8 <__fp_splitA>
 706:	08 c0       	rjmp	.+16     	; 0x718 <__fp_splitA+0x30>
 708:	16 16       	cp	r1, r22
 70a:	17 06       	cpc	r1, r23
 70c:	18 06       	cpc	r1, r24
 70e:	99 1f       	adc	r25, r25
 710:	f1 cf       	rjmp	.-30     	; 0x6f4 <__fp_splitA+0xc>
 712:	86 95       	lsr	r24
 714:	71 05       	cpc	r23, r1
 716:	61 05       	cpc	r22, r1
 718:	08 94       	sec
 71a:	08 95       	ret

0000071c <__fp_zero>:
 71c:	e8 94       	clt

0000071e <__fp_szero>:
 71e:	bb 27       	eor	r27, r27
 720:	66 27       	eor	r22, r22
 722:	77 27       	eor	r23, r23
 724:	cb 01       	movw	r24, r22
 726:	97 f9       	bld	r25, 7
 728:	08 95       	ret

0000072a <__mulsf3>:
 72a:	0b d0       	rcall	.+22     	; 0x742 <__mulsf3x>
 72c:	78 c0       	rjmp	.+240    	; 0x81e <__fp_round>
 72e:	69 d0       	rcall	.+210    	; 0x802 <__fp_pscA>
 730:	28 f0       	brcs	.+10     	; 0x73c <__mulsf3+0x12>
 732:	6e d0       	rcall	.+220    	; 0x810 <__fp_pscB>
 734:	18 f0       	brcs	.+6      	; 0x73c <__mulsf3+0x12>
 736:	95 23       	and	r25, r21
 738:	09 f0       	breq	.+2      	; 0x73c <__mulsf3+0x12>
 73a:	5a c0       	rjmp	.+180    	; 0x7f0 <__fp_inf>
 73c:	5f c0       	rjmp	.+190    	; 0x7fc <__fp_nan>
 73e:	11 24       	eor	r1, r1
 740:	ee cf       	rjmp	.-36     	; 0x71e <__fp_szero>

00000742 <__mulsf3x>:
 742:	ca df       	rcall	.-108    	; 0x6d8 <__fp_split3>
 744:	a0 f3       	brcs	.-24     	; 0x72e <__mulsf3+0x4>

00000746 <__mulsf3_pse>:
 746:	95 9f       	mul	r25, r21
 748:	d1 f3       	breq	.-12     	; 0x73e <__mulsf3+0x14>
 74a:	95 0f       	add	r25, r21
 74c:	50 e0       	ldi	r21, 0x00	; 0
 74e:	55 1f       	adc	r21, r21
 750:	62 9f       	mul	r22, r18
 752:	f0 01       	movw	r30, r0
 754:	72 9f       	mul	r23, r18
 756:	bb 27       	eor	r27, r27
 758:	f0 0d       	add	r31, r0
 75a:	b1 1d       	adc	r27, r1
 75c:	63 9f       	mul	r22, r19
 75e:	aa 27       	eor	r26, r26
 760:	f0 0d       	add	r31, r0
 762:	b1 1d       	adc	r27, r1
 764:	aa 1f       	adc	r26, r26
 766:	64 9f       	mul	r22, r20
 768:	66 27       	eor	r22, r22
 76a:	b0 0d       	add	r27, r0
 76c:	a1 1d       	adc	r26, r1
 76e:	66 1f       	adc	r22, r22
 770:	82 9f       	mul	r24, r18
 772:	22 27       	eor	r18, r18
 774:	b0 0d       	add	r27, r0
 776:	a1 1d       	adc	r26, r1
 778:	62 1f       	adc	r22, r18
 77a:	73 9f       	mul	r23, r19
 77c:	b0 0d       	add	r27, r0
 77e:	a1 1d       	adc	r26, r1
 780:	62 1f       	adc	r22, r18
 782:	83 9f       	mul	r24, r19
 784:	a0 0d       	add	r26, r0
 786:	61 1d       	adc	r22, r1
 788:	22 1f       	adc	r18, r18
 78a:	74 9f       	mul	r23, r20
 78c:	33 27       	eor	r19, r19
 78e:	a0 0d       	add	r26, r0
 790:	61 1d       	adc	r22, r1
 792:	23 1f       	adc	r18, r19
 794:	84 9f       	mul	r24, r20
 796:	60 0d       	add	r22, r0
 798:	21 1d       	adc	r18, r1
 79a:	82 2f       	mov	r24, r18
 79c:	76 2f       	mov	r23, r22
 79e:	6a 2f       	mov	r22, r26
 7a0:	11 24       	eor	r1, r1
 7a2:	9f 57       	subi	r25, 0x7F	; 127
 7a4:	50 40       	sbci	r21, 0x00	; 0
 7a6:	8a f0       	brmi	.+34     	; 0x7ca <__mulsf3_pse+0x84>
 7a8:	e1 f0       	breq	.+56     	; 0x7e2 <__mulsf3_pse+0x9c>
 7aa:	88 23       	and	r24, r24
 7ac:	4a f0       	brmi	.+18     	; 0x7c0 <__mulsf3_pse+0x7a>
 7ae:	ee 0f       	add	r30, r30
 7b0:	ff 1f       	adc	r31, r31
 7b2:	bb 1f       	adc	r27, r27
 7b4:	66 1f       	adc	r22, r22
 7b6:	77 1f       	adc	r23, r23
 7b8:	88 1f       	adc	r24, r24
 7ba:	91 50       	subi	r25, 0x01	; 1
 7bc:	50 40       	sbci	r21, 0x00	; 0
 7be:	a9 f7       	brne	.-22     	; 0x7aa <__mulsf3_pse+0x64>
 7c0:	9e 3f       	cpi	r25, 0xFE	; 254
 7c2:	51 05       	cpc	r21, r1
 7c4:	70 f0       	brcs	.+28     	; 0x7e2 <__mulsf3_pse+0x9c>
 7c6:	14 c0       	rjmp	.+40     	; 0x7f0 <__fp_inf>
 7c8:	aa cf       	rjmp	.-172    	; 0x71e <__fp_szero>
 7ca:	5f 3f       	cpi	r21, 0xFF	; 255
 7cc:	ec f3       	brlt	.-6      	; 0x7c8 <__mulsf3_pse+0x82>
 7ce:	98 3e       	cpi	r25, 0xE8	; 232
 7d0:	dc f3       	brlt	.-10     	; 0x7c8 <__mulsf3_pse+0x82>
 7d2:	86 95       	lsr	r24
 7d4:	77 95       	ror	r23
 7d6:	67 95       	ror	r22
 7d8:	b7 95       	ror	r27
 7da:	f7 95       	ror	r31
 7dc:	e7 95       	ror	r30
 7de:	9f 5f       	subi	r25, 0xFF	; 255
 7e0:	c1 f7       	brne	.-16     	; 0x7d2 <__mulsf3_pse+0x8c>
 7e2:	fe 2b       	or	r31, r30
 7e4:	88 0f       	add	r24, r24
 7e6:	91 1d       	adc	r25, r1
 7e8:	96 95       	lsr	r25
 7ea:	87 95       	ror	r24
 7ec:	97 f9       	bld	r25, 7
 7ee:	08 95       	ret

000007f0 <__fp_inf>:
 7f0:	97 f9       	bld	r25, 7
 7f2:	9f 67       	ori	r25, 0x7F	; 127
 7f4:	80 e8       	ldi	r24, 0x80	; 128
 7f6:	70 e0       	ldi	r23, 0x00	; 0
 7f8:	60 e0       	ldi	r22, 0x00	; 0
 7fa:	08 95       	ret

000007fc <__fp_nan>:
 7fc:	9f ef       	ldi	r25, 0xFF	; 255
 7fe:	80 ec       	ldi	r24, 0xC0	; 192
 800:	08 95       	ret

00000802 <__fp_pscA>:
 802:	00 24       	eor	r0, r0
 804:	0a 94       	dec	r0
 806:	16 16       	cp	r1, r22
 808:	17 06       	cpc	r1, r23
 80a:	18 06       	cpc	r1, r24
 80c:	09 06       	cpc	r0, r25
 80e:	08 95       	ret

00000810 <__fp_pscB>:
 810:	00 24       	eor	r0, r0
 812:	0a 94       	dec	r0
 814:	12 16       	cp	r1, r18
 816:	13 06       	cpc	r1, r19
 818:	14 06       	cpc	r1, r20
 81a:	05 06       	cpc	r0, r21
 81c:	08 95       	ret

0000081e <__fp_round>:
 81e:	09 2e       	mov	r0, r25
 820:	03 94       	inc	r0
 822:	00 0c       	add	r0, r0
 824:	11 f4       	brne	.+4      	; 0x82a <__fp_round+0xc>
 826:	88 23       	and	r24, r24
 828:	52 f0       	brmi	.+20     	; 0x83e <__fp_round+0x20>
 82a:	bb 0f       	add	r27, r27
 82c:	40 f4       	brcc	.+16     	; 0x83e <__fp_round+0x20>
 82e:	bf 2b       	or	r27, r31
 830:	11 f4       	brne	.+4      	; 0x836 <__fp_round+0x18>
 832:	60 ff       	sbrs	r22, 0
 834:	04 c0       	rjmp	.+8      	; 0x83e <__fp_round+0x20>
 836:	6f 5f       	subi	r22, 0xFF	; 255
 838:	7f 4f       	sbci	r23, 0xFF	; 255
 83a:	8f 4f       	sbci	r24, 0xFF	; 255
 83c:	9f 4f       	sbci	r25, 0xFF	; 255
 83e:	08 95       	ret

00000840 <__tablejump2__>:
 840:	ee 0f       	add	r30, r30
 842:	ff 1f       	adc	r31, r31
 844:	88 1f       	adc	r24, r24
 846:	8b bf       	out	0x3b, r24	; 59
 848:	07 90       	elpm	r0, Z+
 84a:	f6 91       	elpm	r31, Z
 84c:	e0 2d       	mov	r30, r0
 84e:	19 94       	eijmp

00000850 <__itoa_ncheck>:
 850:	bb 27       	eor	r27, r27
 852:	4a 30       	cpi	r20, 0x0A	; 10
 854:	31 f4       	brne	.+12     	; 0x862 <__itoa_ncheck+0x12>
 856:	99 23       	and	r25, r25
 858:	22 f4       	brpl	.+8      	; 0x862 <__itoa_ncheck+0x12>
 85a:	bd e2       	ldi	r27, 0x2D	; 45
 85c:	90 95       	com	r25
 85e:	81 95       	neg	r24
 860:	9f 4f       	sbci	r25, 0xFF	; 255
 862:	01 c0       	rjmp	.+2      	; 0x866 <__utoa_common>

00000864 <__utoa_ncheck>:
 864:	bb 27       	eor	r27, r27

00000866 <__utoa_common>:
 866:	fb 01       	movw	r30, r22
 868:	55 27       	eor	r21, r21
 86a:	aa 27       	eor	r26, r26
 86c:	88 0f       	add	r24, r24
 86e:	99 1f       	adc	r25, r25
 870:	aa 1f       	adc	r26, r26
 872:	a4 17       	cp	r26, r20
 874:	10 f0       	brcs	.+4      	; 0x87a <__utoa_common+0x14>
 876:	a4 1b       	sub	r26, r20
 878:	83 95       	inc	r24
 87a:	50 51       	subi	r21, 0x10	; 16
 87c:	b9 f7       	brne	.-18     	; 0x86c <__utoa_common+0x6>
 87e:	a0 5d       	subi	r26, 0xD0	; 208
 880:	aa 33       	cpi	r26, 0x3A	; 58
 882:	08 f0       	brcs	.+2      	; 0x886 <__utoa_common+0x20>
 884:	a9 5d       	subi	r26, 0xD9	; 217
 886:	a1 93       	st	Z+, r26
 888:	00 97       	sbiw	r24, 0x00	; 0
 88a:	79 f7       	brne	.-34     	; 0x86a <__utoa_common+0x4>
 88c:	b1 11       	cpse	r27, r1
 88e:	b1 93       	st	Z+, r27
 890:	11 92       	st	Z+, r1
 892:	cb 01       	movw	r24, r22
 894:	00 c0       	rjmp	.+0      	; 0x896 <strrev>

00000896 <strrev>:
 896:	dc 01       	movw	r26, r24
 898:	fc 01       	movw	r30, r24
 89a:	67 2f       	mov	r22, r23
 89c:	71 91       	ld	r23, Z+
 89e:	77 23       	and	r23, r23
 8a0:	e1 f7       	brne	.-8      	; 0x89a <strrev+0x4>
 8a2:	32 97       	sbiw	r30, 0x02	; 2
 8a4:	04 c0       	rjmp	.+8      	; 0x8ae <strrev+0x18>
 8a6:	7c 91       	ld	r23, X
 8a8:	6d 93       	st	X+, r22
 8aa:	70 83       	st	Z, r23
 8ac:	62 91       	ld	r22, -Z
 8ae:	ae 17       	cp	r26, r30
 8b0:	bf 07       	cpc	r27, r31
 8b2:	c8 f3       	brcs	.-14     	; 0x8a6 <strrev+0x10>
 8b4:	08 95       	ret

000008b6 <_exit>:
 8b6:	f8 94       	cli

000008b8 <__stop_program>:
 8b8:	ff cf       	rjmp	.-2      	; 0x8b8 <__stop_program>
