
Automatic.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  0000025a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000206  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000025a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000028c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  000002cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e72  00000000  00000000  0000031c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000c66  00000000  00000000  0000118e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000051c  00000000  00000000  00001df4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000084  00000000  00000000  00002310  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000631  00000000  00000000  00002394  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000d8  00000000  00000000  000029c5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00002a9d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	59 d0       	rcall	.+178    	; 0x1a8 <main>
  f6:	85 c0       	rjmp	.+266    	; 0x202 <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <_Z14_pwm_base_initv>:


void _pwm_base_init(void)
{
	/////////set PWM pins for output mode/////////
	OUTPUT(_DD_M1) ; //set PORTB PIN5 as output
  fa:	25 9a       	sbi	0x04, 5	; 4
	OUTPUT(_DD_M2) ;
  fc:	26 9a       	sbi	0x04, 6	; 4
	OUTPUT(_DD_M3) ;
  fe:	27 9a       	sbi	0x04, 7	; 4
	OUTPUT(_DD_M4) ;
 100:	6b 9a       	sbi	0x0d, 3	; 13
	//////////////////////////////////////////////
	ICR1 = ICR_VALUE;	//frequency set to 4Khz
 102:	83 ef       	ldi	r24, 0xF3	; 243
 104:	91 e0       	ldi	r25, 0x01	; 1
 106:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x700087>
 10a:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x700086>
	ICR3 = ICR_VALUE;	//frequency set to 4khz
 10e:	90 93 97 00 	sts	0x0097, r25	; 0x800097 <__TEXT_REGION_LENGTH__+0x700097>
 112:	80 93 96 00 	sts	0x0096, r24	; 0x800096 <__TEXT_REGION_LENGTH__+0x700096>
	//////////////////////////////////////////////
	TCCR1A = (1<<COM1A1)|(1<<COM1B1)|(1<<COM1C1)|(1<<WGM11);
 116:	8a ea       	ldi	r24, 0xAA	; 170
 118:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
	TCCR3A = (1<<COM3A1) | (1<< WGM31);
 11c:	82 e8       	ldi	r24, 0x82	; 130
 11e:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
	TCCR1B = (1<<WGM12) | (1<<WGM13) | (1<<CS11);
 122:	8a e1       	ldi	r24, 0x1A	; 26
 124:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
	TCCR3B = (1<<WGM32) | (1<<WGM33) | (1<<CS31);
 128:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x700091>
 12c:	08 95       	ret

0000012e <_Z12_pwm_base_dci>:
	/////////////////////////////////////////////
}
void _pwm_base_dc(int dutycycle)
{
	OCR1A = dutycycle;
 12e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 132:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
	OCR1B = dutycycle;
 136:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x70008b>
 13a:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x70008a>
	OCR1C = dutycycle;
 13e:	90 93 8d 00 	sts	0x008D, r25	; 0x80008d <__TEXT_REGION_LENGTH__+0x70008d>
 142:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <__TEXT_REGION_LENGTH__+0x70008c>
	OCR3A = dutycycle;
 146:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
 14a:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
 14e:	08 95       	ret

00000150 <_Z5MOV0Fv>:
/////////To move mechanum 0 degree front//////
/*move all the motor in forward direction*/

void MOV0F(void)
{
	DDRF = 0xff;
 150:	8f ef       	ldi	r24, 0xFF	; 255
 152:	80 bb       	out	0x10, r24	; 16
	SET(_DD_IN1_M1);
 154:	88 9a       	sbi	0x11, 0	; 17
	SET(_DD_IN1_M2);
 156:	8a 9a       	sbi	0x11, 2	; 17
	SET(_DD_IN1_M3);
 158:	8c 9a       	sbi	0x11, 4	; 17
	SET(_DD_IN1_M4);
 15a:	8e 9a       	sbi	0x11, 6	; 17
	CLEAR(_DD_IN2_M1);
 15c:	89 98       	cbi	0x11, 1	; 17
	CLEAR(_DD_IN2_M2);
 15e:	8b 98       	cbi	0x11, 3	; 17
	CLEAR(_DD_IN2_M3);
 160:	8d 98       	cbi	0x11, 5	; 17
	CLEAR(_DD_IN2_M4);
 162:	8f 98       	cbi	0x11, 7	; 17
 164:	08 95       	ret

00000166 <_Z5MOV0Bv>:
//////////To move MECHANUM 0 degree back///////
/*move all the motor in backward direction*/

void MOV0B(void)
{
	DDRF = 0xff;
 166:	8f ef       	ldi	r24, 0xFF	; 255
 168:	80 bb       	out	0x10, r24	; 16
	CLEAR(_DD_IN1_M1);
 16a:	88 98       	cbi	0x11, 0	; 17
	CLEAR(_DD_IN1_M2);
 16c:	8a 98       	cbi	0x11, 2	; 17
	CLEAR(_DD_IN1_M3);
 16e:	8c 98       	cbi	0x11, 4	; 17
	CLEAR(_DD_IN1_M4);
 170:	8e 98       	cbi	0x11, 6	; 17
	SET(_DD_IN2_M1);
 172:	89 9a       	sbi	0x11, 1	; 17
	SET(_DD_IN2_M2);
 174:	8b 9a       	sbi	0x11, 3	; 17
	SET(_DD_IN2_M3);
 176:	8d 9a       	sbi	0x11, 5	; 17
	SET(_DD_IN2_M4);
 178:	8f 9a       	sbi	0x11, 7	; 17
 17a:	08 95       	ret

0000017c <_Z6MOV90Fv>:
/*move 2front motor in forward, and two back motor in backward*/
/*for left 90 degree movement*/

void MOV90F(void)
{
	DDRF = 0xff;
 17c:	8f ef       	ldi	r24, 0xFF	; 255
 17e:	80 bb       	out	0x10, r24	; 16
	SET(_DD_IN1_M1);
 180:	88 9a       	sbi	0x11, 0	; 17
	CLEAR(_DD_IN1_M2);
 182:	8a 98       	cbi	0x11, 2	; 17
	CLEAR(_DD_IN1_M3);
 184:	8c 98       	cbi	0x11, 4	; 17
	SET(_DD_IN1_M4);
 186:	8e 9a       	sbi	0x11, 6	; 17
	CLEAR(_DD_IN2_M1);
 188:	89 98       	cbi	0x11, 1	; 17
	SET(_DD_IN2_M2);
 18a:	8b 9a       	sbi	0x11, 3	; 17
	SET(_DD_IN2_M3);
 18c:	8d 9a       	sbi	0x11, 5	; 17
	CLEAR(_DD_IN2_M4);
 18e:	8f 98       	cbi	0x11, 7	; 17
 190:	08 95       	ret

00000192 <_Z6MOV90Bv>:
/*move 2 back motor in forward, and two front motor in back*/
/*for right 90 degree movement*/

void MOV90B(void)
{
	DDRF = 0xff;
 192:	8f ef       	ldi	r24, 0xFF	; 255
 194:	80 bb       	out	0x10, r24	; 16
	CLEAR(_DD_IN1_M1);
 196:	88 98       	cbi	0x11, 0	; 17
	SET(_DD_IN1_M2);
 198:	8a 9a       	sbi	0x11, 2	; 17
	SET(_DD_IN1_M3);
 19a:	8c 9a       	sbi	0x11, 4	; 17
	CLEAR(_DD_IN1_M4);
 19c:	8e 98       	cbi	0x11, 6	; 17
	SET(_DD_IN2_M1);
 19e:	89 9a       	sbi	0x11, 1	; 17
	CLEAR(_DD_IN2_M2);
 1a0:	8b 98       	cbi	0x11, 3	; 17
	CLEAR(_DD_IN2_M3);
 1a2:	8d 98       	cbi	0x11, 5	; 17
	SET(_DD_IN2_M4);
 1a4:	8f 9a       	sbi	0x11, 7	; 17
 1a6:	08 95       	ret

000001a8 <main>:
#include "headers.h"
#include "drive.h"


int main(void)
{
 1a8:	a8 df       	rcall	.-176    	; 0xfa <_Z14_pwm_base_initv>
 1aa:	84 ef       	ldi	r24, 0xF4	; 244
 1ac:	91 e0       	ldi	r25, 0x01	; 1
 1ae:	bf df       	rcall	.-130    	; 0x12e <_Z12_pwm_base_dci>
 1b0:	cf df       	rcall	.-98     	; 0x150 <_Z5MOV0Fv>
 1b2:	2f ef       	ldi	r18, 0xFF	; 255
 1b4:	89 e6       	ldi	r24, 0x69	; 105
 1b6:	98 e1       	ldi	r25, 0x18	; 24
 1b8:	21 50       	subi	r18, 0x01	; 1
 1ba:	80 40       	sbci	r24, 0x00	; 0
 1bc:	90 40       	sbci	r25, 0x00	; 0
 1be:	e1 f7       	brne	.-8      	; 0x1b8 <main+0x10>
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <main+0x1a>
 1c2:	00 00       	nop
 1c4:	d0 df       	rcall	.-96     	; 0x166 <_Z5MOV0Bv>
 1c6:	2f ef       	ldi	r18, 0xFF	; 255
 1c8:	89 e6       	ldi	r24, 0x69	; 105
 1ca:	98 e1       	ldi	r25, 0x18	; 24
 1cc:	21 50       	subi	r18, 0x01	; 1
 1ce:	80 40       	sbci	r24, 0x00	; 0
 1d0:	90 40       	sbci	r25, 0x00	; 0
 1d2:	e1 f7       	brne	.-8      	; 0x1cc <main+0x24>
 1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <main+0x2e>
 1d6:	00 00       	nop
 1d8:	d1 df       	rcall	.-94     	; 0x17c <_Z6MOV90Fv>
 1da:	2f ef       	ldi	r18, 0xFF	; 255
 1dc:	89 e6       	ldi	r24, 0x69	; 105
 1de:	98 e1       	ldi	r25, 0x18	; 24
 1e0:	21 50       	subi	r18, 0x01	; 1
 1e2:	80 40       	sbci	r24, 0x00	; 0
 1e4:	90 40       	sbci	r25, 0x00	; 0
 1e6:	e1 f7       	brne	.-8      	; 0x1e0 <main+0x38>
 1e8:	00 c0       	rjmp	.+0      	; 0x1ea <main+0x42>
 1ea:	00 00       	nop
 1ec:	d2 df       	rcall	.-92     	; 0x192 <_Z6MOV90Bv>
 1ee:	2f ef       	ldi	r18, 0xFF	; 255
 1f0:	89 e6       	ldi	r24, 0x69	; 105
 1f2:	98 e1       	ldi	r25, 0x18	; 24
 1f4:	21 50       	subi	r18, 0x01	; 1
 1f6:	80 40       	sbci	r24, 0x00	; 0
 1f8:	90 40       	sbci	r25, 0x00	; 0
 1fa:	e1 f7       	brne	.-8      	; 0x1f4 <main+0x4c>
 1fc:	00 c0       	rjmp	.+0      	; 0x1fe <main+0x56>
 1fe:	00 00       	nop
 200:	d4 cf       	rjmp	.-88     	; 0x1aa <main+0x2>

00000202 <_exit>:
 202:	f8 94       	cli

00000204 <__stop_program>:
 204:	ff cf       	rjmp	.-2      	; 0x204 <__stop_program>
